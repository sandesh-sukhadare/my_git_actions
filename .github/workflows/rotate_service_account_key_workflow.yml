name: Deploy Cloud Functions
on:
  workflow_dispatch:
    inputs:
      argument1:
        description: US-ACC
        default: false
        required: true
      argument2:
        description: US-PROD
        default: false
        required: true
      argument4:
        description: EU-PROD
        default: false
        required: true
      argument5:
        description: AP-PROD
        default: false
        required: true
      argument6:
        description: GLOBAL-PROD
        default: false
        required: true
      argument3:
        description: Config File Path
        required: true

    permissions:
      users:
        -  sandesh-sukhadare
        -

jobs:
  deploy-region-1:
#    if: contains('[" sandesh-sukhadare ","lpo-ulter"]', github.actor)
    if: ${{ inputs.argument1 == 'true' }}
    name: Project-1
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - id: auth
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: projects/447510273686/locations/global/workloadIdentityPools/github-actions-cloud-run/providers/github
          service_account: randstad-key-test@randstad-etl-poc.iam.gserviceaccount.com

      - name: Set up Google Cloud SDK P1
        uses: google-github-actions/setup-gcloud@v1

      - name: Read JSON and Set Variables
        run: |
          JSON_CONTENT=$(cat ${{ inputs.argument3}})
          US_DEV=$(echo "$JSON_CONTENT" | jq -r '.US_DEV')
          echo US_DEV=$(echo "$JSON_CONTENT" | jq -r '.US_DEV') >> $GITHUB_ENV
          for key in $(echo "$US_DEV" | jq -r 'keys[]'); do
            value=$(echo "$US_DEV" | jq -r ".$key")
            echo "Setting $key=$value as an environment variable"
            echo "$key=$value" >> $GITHUB_ENV
          done

      - name: Use Environment Variables
        run: |
          echo $cloud_function_name


      - name: Deploy Cloud Function P1
        run: |
          gcloud functions deploy $cloud_function_name \
            --gen2 \
            --runtime python310 \
            --region=us-central1 \
            --entry-point main \
            --source $source \
            --trigger-http \
            --service-account randstad-key-test@randstad-etl-poc.iam.gserviceaccount.com \
            --set-env-vars SA_EMAIL=randstad-key-test@randstad-etl-poc.iam.gserviceaccount.com,SA_NAME=randstad-key-test,secret_id=randstad-secret

      - name: Deploy Workflow P1
        run: |
          gcloud workflows deploy rotate_service_account_key_wf \
            --source=rotate_service_account_key/workflow/rotate_service_account_key_wf.yml \
            --service-account=randstad-key-test@randstad-etl-poc.iam.gserviceaccount.com



  deploy-region-2:
#    if: contains('[" sandesh-sukhadare ","lpo-ulter"]', github.actor)
    if: ${{ inputs.argument2 == 'true' }}
    name: Project-2
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - id: auth
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: projects/761401601137/locations/global/workloadIdentityPools/github-actions-cloud-run/providers/github
          service_account: ranstad-agri-test@agri-data-analytics.iam.gserviceaccount.com

      - name: Set up Google Cloud SDK P1
        uses: google-github-actions/setup-gcloud@v1

      - name: Deploy Cloud Function P2
        run: |
          gcloud functions deploy rotate_service_account_key \
            --gen2 \
            --runtime python310 \
            --region=us-central1 \
            --entry-point main \
            --source rotate_service_account_key/cloud_function \
            --trigger-http \
            --service-account ranstad-agri-test@agri-data-analytics.iam.gserviceaccount.com \
            --set-env-vars SA_EMAIL=ranstad-agri-test@agri-data-analytics.iam.gserviceaccount.com,SA_NAME=ranstad_agri_test,secret_id=randstad-secret

      - name: Deploy Workflow P2
        run: |
          gcloud workflows deploy rotate_service_account_key_wf \
            --source=rotate_service_account_key/workflow/rotate_service_account_key_wf.yml \
            --service-account=ranstad-agri-test@agri-data-analytics.iam.gserviceaccount.com
